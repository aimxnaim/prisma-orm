// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int              @id @default(autoincrement())
  age               Int
  name              String
  email             String           @unique
  password          String?
  role              Role             @default(BASIC)
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  writtenPost       Post[]           @relation("WrittenPosts")
  favouritePost     Post[]           @relation("FavouritePosts")
  UserPreferences   UserPreferences? @relation(fields: [UserPreferencesId], references: [id])
  UserPreferencesId Int?             @unique

  @@unique([age, name])
  @@index([email])
}

model UserPreferences {
  id           Int     @id @default(autoincrement())
  emailUpdates Boolean
  user         User?
}

model Post {
  id            Int        @id @default(autoincrement())
  rating        Float
  title         String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      Int
  favoriteBy    User?      @relation("FavouritePosts", fields: [favouriteById], references: [id])
  favouriteById Int?
  categories    Category[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

enum Role {
  BASIC
  ADMIN
}
